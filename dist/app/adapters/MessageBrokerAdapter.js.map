{"version":3,"sources":["app/adapters/MessageBrokerAdapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEA,sEAAkE;AAElE,8CAAgD;AAOhD,IAAa,oBAAoB,GAAjC;IAIC,YACmC,cAAqC;QAArC,mBAAc,GAAd,cAAc,CAAuB;IAExE,CAAC;IAEM,IAAI;QACV,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;QASjC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;CACD,CAAA;AArBY,oBAAoB;IADhC,gCAAU,EAAE;IAMV,WAAA,4BAAM,CAAC,aAAC,CAAC,cAAc,CAAC,CAAA;;GALd,oBAAoB,CAqBhC;AArBY,oDAAoB","file":"MessageBrokerAdapter.js","sourcesContent":["import { IAdapter } from './IAdapter';\r\nimport { IConfigurationAdapter } from './ConfigurationAdapter';\r\nimport { injectable, inject } from '../utils/DependencyContainer';\r\nimport { SettingKeys as S } from '../constants/SettingKeys';\r\nimport { Types as T } from '../constants/Types';\r\n\r\nexport interface IMessageBrokerAdapter extends IAdapter {\r\n\t\r\n}\r\n\r\n@injectable()\r\nexport class MessageBrokerAdapter implements IMessageBrokerAdapter {\r\n\t\r\n\tprivate _channel;\r\n\r\n\tconstructor(\r\n\t\t@inject(T.CONFIG_ADAPTER) private _configAdapter: IConfigurationAdapter\r\n\t) {\r\n\t}\r\n\t\r\n\tpublic init(): Promise<boolean> {\r\n\t\tlet cfgAdt = this._configAdapter;\r\n\t\t// Read more: https://github.com/yamalight/microwork\r\n\t\t/*\r\n\t\tthis._channel = new Microwork({\r\n\t\t\thost: cfgAdt.get(S.MSG_BROKER_HOST),\r\n\t\t\texchange: cfgAdt.get(S.MSG_BROKER_EXCHANGE),\r\n\t\t\treconnectTimeout: cfgAdt.get(S.MSG_BROKER_RECONN_TIMEOUT)\r\n\t\t});\r\n\t\t//*/\r\n\t\treturn Promise.resolve(true);\r\n\t}\r\n}"]}