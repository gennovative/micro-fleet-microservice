{"version":3,"sources":["app/hubs/ExpressHub.ts"],"names":[],"mappings":";AAEA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACnC,iCAAiC;AAOjC;;GAEG;AACH;IAGC;QACC,IAAI,CAAC,IAAI,GAAG,OAAO,EAAE,CAAC;IACvB,CAAC;IAED;;OAEG;IACI,GAAG,CAAC,QAAmB;QAC7B,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,gCAAgC,CAAC,CAAC;QAElE,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACtC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,OAAe,IAAI,EAAE,QAAmB;QACrD,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG;YACvC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;CACD;AA5BD,gCA4BC","file":"ExpressHub.js","sourcesContent":["import * as core from 'express-serve-static-core';\r\nimport * as http from 'http';\r\nconst express = require('express');\r\nimport * as assert from 'assert';\r\n\r\nexport interface IMicroWeb {\r\n\tname: string;\r\n\tinitRoute(router: core.IRouter): void;\r\n}\r\n\r\n/**\r\n * A central point that allows micro web services to register their routes.\r\n */\r\nexport class ExpressHub {\r\n\tprivate _app: core.Express;\r\n\r\n\tconstructor() {\r\n\t\tthis._app = express();\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a micro web to serve under path \"/{web name}/{web routes}\".\r\n\t */\r\n\tpublic use(microWeb: IMicroWeb): ExpressHub {\r\n\t\tassert.notEqual(microWeb, null, 'Argument \"plugin\" is required.');\r\n\r\n\t\tlet r = express.Router();\r\n\t\tthis._app.use(`/${microWeb.name}`, r);\r\n\t\tmicroWeb.initRoute(r);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Starts HTTP server.\r\n\t */\r\n\tpublic listen(port: number = 3000, callback?: Function): http.Server {\r\n\t\tlet server = this._app.listen(port, (err) => {\r\n\t\t\tcallback(err, server);\r\n\t\t});\r\n\t\treturn server;\r\n\t}\r\n}"]}