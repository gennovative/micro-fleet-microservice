{"version":3,"sources":["app/rpc/RpcCallerBase.ts"],"names":[],"mappings":";AAgBA;IAIC,IAAW,IAAI;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,IAAW,IAAI,CAAC,GAAW;QAC1B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IAClB,CAAC;CACD;AAXD,sCAWC","file":"RpcCallerBase.js","sourcesContent":["import { IRpcRequest, IRpcResponse } from './RpcModels';\r\n\r\nexport interface IRpcCaller {\r\n\t/**\r\n\t * A name used in \"from\" and \"to\" request property.\r\n\t */\r\n\tname: string;\r\n\r\n\t/**\r\n\t * Listens to `route`, resolves an instance with `dependencyIdentifier`\r\n\t * when there is a request coming, calls instance's `action` method. If `actions`\r\n\t * is not specified, RPC Caller tries to figure out an action method from `route`.\r\n\t */\r\n\tcall(moduleName: string, action: string, param: any): Promise<IRpcResponse>;\r\n}\r\n\r\nexport abstract class RpcCallerBase {\r\n\r\n\tprotected _name: string;\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set name(val: string) {\r\n\t\tthis._name = val;\r\n\t}\r\n}"]}