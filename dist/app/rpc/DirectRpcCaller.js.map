{"version":3,"sources":["app/rpc/DirectRpcCaller.ts"],"names":[],"mappings":";;;;;;;;;;AAGA,2CAA2C;AAG3C,0CAAuC;AAEvC,sEAAwF;AAExF,mCAAmC;AAQnC,IAAa,eAAe,GAA5B,qBACG,SAAQ,GAAG,CAAC,aAAa;IAM3B;QACC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;IAC9B,CAAC;IAED,IAAW,OAAO;QACjB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,IAAW,OAAO,CAAC,GAAW;QAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACrB,CAAC;IAEM,IAAI,CAAC,UAAkB,EAAE,MAAc,EAAE,MAAW;QAC1D,aAAK,CAAC,aAAa,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAC9C,aAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACtC,aAAK,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,uBAAuB,CAAC,CAAC;QAE7D,MAAM,CAAC,IAAI,OAAO,CAAmB,CAAC,OAAO,EAAE,MAAM;YACpD,IAAI,OAAO,GAAoB;gBAC9B,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,EAAE,EAAE,UAAU;gBACd,MAAM;aACN,EACA,OAAO,GAAG;gBACV,MAAM,EAAE,MAAM;gBACd,GAAG,EAAE,UAAU,IAAI,CAAC,QAAQ,IAAI,UAAU,IAAI,MAAM,EAAE;gBACtD,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,IAAI,CAAC,6CAA6C;aACxD,CAAC;YAEF,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACJ,CAAC;CACD,CAAA;AAzCY,eAAe;IAD3B,gCAAU,EAAE;;GACA,eAAe,CAyC3B;AAzCY,0CAAe","file":"DirectRpcCaller.js","sourcesContent":["import { EventEmitter } from 'events';\r\n\r\nimport * as uuid from 'uuid';\r\nimport * as request from 'request-promise';\r\n\r\nimport * as ex from '../microservice/Exceptions';\r\nimport { Guard } from '../utils/Guard';\r\nimport { Types as T } from '../constants/Types';\r\nimport { injectable, inject, IDependencyContainer } from '../utils/DependencyContainer';\r\nimport { IMessageBrokerAdapter, MessageHandleFunction, IMessage } from '../adapters/MessageBrokerAdapter';\r\nimport * as rpc from './RpcCommon';\r\n\r\n\r\nexport interface IDirectRpcCaller extends rpc.IRpcCaller {\r\n\tbaseUrl: string;\r\n}\r\n\r\n@injectable()\r\nexport class DirectRpcCaller\r\n\t\t\textends rpc.RpcCallerBase\r\n\t\t\timplements IDirectRpcCaller {\r\n\r\n\tprivate _baseUrl: string;\r\n\tprivate _requestMaker: (options) => Promise<any>;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._requestMaker = request;\r\n\t}\r\n\r\n\tpublic get baseUrl(): string {\r\n\t\treturn this._baseUrl;\r\n\t}\r\n\r\n\tpublic set baseUrl(val: string) {\r\n\t\tthis._baseUrl = val;\r\n\t}\r\n\r\n\tpublic call(moduleName: string, action: string, params: any): Promise<rpc.IRpcResponse> {\r\n\t\tGuard.assertDefined('moduleName', moduleName);\r\n\t\tGuard.assertDefined('action', action);\r\n\t\tGuard.assertIsTruthy(this._baseUrl, 'Base URL must be set!');\r\n\r\n\t\treturn new Promise<rpc.IRpcResponse>((resolve, reject) => {\r\n\t\t\tlet request: rpc.IRpcRequest = {\r\n\t\t\t\tfrom: this._name,\r\n\t\t\t\tto: moduleName,\r\n\t\t\t\tparams\r\n\t\t\t},\r\n\t\t\t\toptions = {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\turi: `http://${this._baseUrl}/${moduleName}/${action}`,\r\n\t\t\t\tbody: request,\r\n\t\t\t\tjson: true // Automatically stringifies the body to JSON\r\n\t\t\t};\r\n\r\n\t\t\treturn this._requestMaker(options);\r\n\t\t});\r\n\t}\r\n}"]}